{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "sectionj1vlml",
            "type": "section",
            "title": "JavaScript Examples",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownxzl0z5",
            "type": "markdown",
            "body": [
                "JavaScript is the language built-in to web browsers.  It's great for visualization and interaction, and also is used for glue and scripting in Beaker.  See the additional tutorials for more examples."
            ],
            "evaluatorReader": false
        },
        {
            "id": "sectionTzWHqv",
            "type": "section",
            "title": "The Game of Life",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "code31H2LG",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": [
                    "<style>",
                    "div.cell {",
                    "  width: 12px;",
                    "  height: 12px;",
                    "  display: table-cell;",
                    "  border: 1px solid gray;",
                    "}",
                    "div.alive {",
                    "  background-color: brown;",
                    "}",
                    "div.dead {",
                    "  background-color: lightskyblue;",
                    "}",
                    "button.life {",
                    "  margin-top: 20px;",
                    "}",
                    "</style>",
                    "",
                    "<div id=\"life\">",
                    "</div>",
                    "",
                    "<button id=\"stop\" class=\"life\">stop</button>"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<script>\nvar beaker = bkHelper.getBeakerObject().beakerObj;\n</script>\n<style>\ndiv.cell {\n  width: 12px;\n  height: 12px;\n  display: table-cell;\n  border: 1px solid gray;\n}\ndiv.alive {\n  background-color: brown;\n}\ndiv.dead {\n  background-color: lightskyblue;\n}\nbutton.life {\n  margin-top: 20px;\n}\n</style>\n\n<div id=\"life\">\n</div>\n\n<button id=\"stop\" class=\"life\">stop</button>"
                },
                "selectedType": "BeakerDisplay",
                "elapsedTime": 0
            },
            "evaluatorReader": true,
            "lineCount": 22
        },
        {
            "id": "codeace4aM",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "var cols = 50;",
                    "var rows = 20;",
                    "",
                    "var makeBoard = function(f) {",
                    "  var board = [];",
                    "  for (var i = 0; i < rows; i++) {",
                    "    var row = [];",
                    "    for (var j = 0; j < cols; j++) {",
                    "      row.push(f(i, j));",
                    "    }",
                    "    board.push(row);",
                    "  }",
                    "  return board;",
                    "};",
                    "",
                    "var makeHtmlBoard = function(elem) {",
                    "  for (var i = 0; i < rows; i++) {",
                    "    var row = $('<div>');",
                    "    for (var j = 0; j < cols; j++) {",
                    "      $('<div>').appendTo(row);",
                    "    }",
                    "    row.appendTo(elem);",
                    "  }",
                    "};",
                    "",
                    "makeHtmlBoard($('#life'));",
                    "",
                    "var board = makeBoard(function() {return (Math.random() > 0.5);});",
                    "var temp =  makeBoard(function() {return undefined;});",
                    "",
                    "var deferred = beaker.newDeferred();",
                    "var running = true;",
                    "var ratio;",
                    "",
                    "var step = function() {",
                    "  var top_elem = $('#life');",
                    "  var live_count = 0;",
                    "  for (var i = 0; i < rows; i++) {",
                    "    var row_children = top_elem.children().eq(i).children();",
                    "    for (var j = 0; j < cols; j++) {",
                    "      var count = 0;",
                    "      for (var ii = -1; ii <= 1; ii++) {",
                    "        for (var jj = -1; jj <= 1; jj++) {",
                    "          if (ii == 0 && jj == 0) continue;",
                    "          if (board[(i + ii + rows) % rows][(j + jj + cols) % cols]) count++;",
                    "        }",
                    "      }",
                    "      var cell = temp[i][j] = (count == 3) || (count == 2 && board[i][j]);",
                    "      var elem = row_children.eq(j);",
                    "      elem.removeClass().addClass(\"cell\");",
                    "      elem.addClass(cell ? \"alive\" : \"dead\");",
                    "      if (cell) live_count++;",
                    "    }",
                    "  }",
                    "  ratio = live_count / (rows * cols);",
                    "  var swap = board;",
                    "  board = temp;",
                    "  temp = swap;",
                    "  if (running) beaker.timeout(step, 200);",
                    "}",
                    "",
                    "$('#stop').click(function () {",
                    "  running = false;",
                    "  deferred.resolve(\"ratio = \" + ratio);",
                    "});",
                    "",
                    "",
                    "step();",
                    "",
                    "deferred"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "result": "ratio = 0.01",
                "pluginName": "JavaScript",
                "elapsedTime": 115373
            },
            "evaluatorReader": true,
            "lineCount": 70
        },
        {
            "id": "codeEry06X",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "bkHelper.updateDocumentModelFromDOM(\"life\");"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionNfcu1l",
            "type": "section",
            "title": "Printing",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeKLDfkl",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.print(\"Use 'beaker.print()' to log output to the 'cell output' area below.\");",
                    "beaker.print(\"It gets saved in the notebook.\");",
                    "beaker.printError(\"Errors too!\");",
                    "\"returns a regular value too\""
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "Use 'beaker.print()' to log output to the 'cell output' area below.\n"
                        },
                        {
                            "type": "out",
                            "value": "It gets saved in the notebook.\n"
                        },
                        {
                            "type": "err",
                            "value": "Errors too!\n"
                        }
                    ],
                    "payload": "returns a regular value too"
                },
                "selectedType": "Results",
                "pluginName": "JavaScript",
                "elapsedTime": 94
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "section8MJCjE",
            "type": "section",
            "title": "Data Frames",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeVBGmAc",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "[[\"there\", \"is\"], [\"also\", \"a return value\"]]"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "TableDisplay",
                    "values": [
                        [
                            "there",
                            "is"
                        ],
                        [
                            "also",
                            "a return value"
                        ]
                    ],
                    "subtype": "Matrix",
                    "columnNames": [
                        "c0",
                        "c1"
                    ],
                    "types": [
                        "string",
                        "string"
                    ]
                },
                "selectedType": "Table",
                "pluginName": "JavaScript",
                "elapsedTime": 25
            },
            "evaluatorReader": true,
            "lineCount": 1
        }
    ],
    "namespace": {}
}
